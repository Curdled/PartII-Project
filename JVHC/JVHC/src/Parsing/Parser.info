-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


terminal qtycon is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_jvhcParse -> Body                           (0)
	Body -> '{' TopDecls '}'                           (1)
	TopDecls -> TopDecl ';' TopDecls                   (2)
	TopDecls -> TopDecl                                (3)
	TopDecl -> data SimpleType '=' Constrs             (4)
	TopDecl -> Decl                                    (5)
	SimpleType -> tycon TyVars                         (6)
	TyVars -> TyVars tyvar                             (7)
	TyVars ->                                          (8)
	Constrs -> Constr '|' Constrs                      (9)
	Constrs -> Constr                                  (10)
	Constr -> tycon ATypes                             (11)
	ATypes -> AType ATypes                             (12)
	ATypes ->                                          (13)
	AType -> tyvar                                     (14)
	AType -> tycon                                     (15)
	AType -> '(' Type ')'                              (16)
	BType -> BType AType                               (17)
	BType -> AType                                     (18)
	Type -> BType                                      (19)
	Type -> BType '->' Type                            (20)
	Decl -> Gendecl                                    (21)
	Decl -> FunLHS RHS                                 (22)
	Gendecl -> Vars '::' Type                          (23)
	Vars -> tyvar ',' Vars                             (24)
	Vars -> tyvar                                      (25)
	FunLHS -> tyvar APats                              (26)
	FunLHS -> Pat                                      (27)
	APats -> tyvar                                     (28)
	APats -> tyvar APats                               (29)
	RHS -> '=' Exp                                     (30)
	Exp -> ExpC                                        (31)
	ExpC -> '\\' tyvar '->' Exp                        (32)
	ExpC -> let '{' Decl '}' in Exp                    (33)
	ExpC -> case Exp of '{' Alts '}'                   (34)
	ExpC -> FExp                                       (35)
	FExp -> AExp                                       (36)
	FExp -> AExp FExp                                  (37)
	AExp -> tyvar                                      (38)
	AExp -> tycon                                      (39)
	AExp -> lit                                        (40)
	AExp -> '(' Exp ')'                                (41)
	Alts -> Alt ';' Alts                               (42)
	Alts -> Alt                                        (43)
	Alt -> Pat '->' Exp                                (44)
	Pat -> tycon APatsWithLiteral                      (45)
	Pat -> APatWithLiteral                             (46)
	APatsWithLiteral -> APatWithLiteral APatsWithLiteral   (47)
	APatsWithLiteral ->                                (48)
	APatWithLiteral -> tyvar                           (49)
	APatWithLiteral -> lit                             (50)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'{'            { L.Special  L.LCurly }
	'}'            { L.Special  L.RCurly }
	'('            { L.Special  L.LParen }
	')'            { L.Special  L.RParen }
	'='            { L.ReservedOP  L.Equal }
	'|'            { L.ReservedOP  L.Pipe }
	','            { L.Special  L.Comma }
	'->'           { L.ReservedOP L.RArrow }
	'::'           { L.ReservedOP L.DColon }
	'\\'           { L.ReservedOP L.BSlash }
	';'            { L.Special L.SemiColon }
	data           { L.ReserveID  L.Data }
	tycon          { L.Conid      $$ }
	tyvar          { L.Varid      $$ }
	qtycon         { L.Conid      $$ }
	let            { L.ReserveID  L.Let }
	in             { L.ReserveID  L.In }
	case           { L.ReserveID  L.Case }
	of             { L.ReserveID  L.Of }
	lit            { L.Literal    $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_jvhcParse rule  0
	Body            rule  1
	TopDecls        rules 2, 3
	TopDecl         rules 4, 5
	SimpleType      rule  6
	TyVars          rules 7, 8
	Constrs         rules 9, 10
	Constr          rule  11
	ATypes          rules 12, 13
	AType           rules 14, 15, 16
	BType           rules 17, 18
	Type            rules 19, 20
	Decl            rules 21, 22
	Gendecl         rule  23
	Vars            rules 24, 25
	FunLHS          rules 26, 27
	APats           rules 28, 29
	RHS             rule  30
	Exp             rule  31
	ExpC            rules 32, 33, 34, 35
	FExp            rules 36, 37
	AExp            rules 38, 39, 40, 41
	Alts            rules 42, 43
	Alt             rule  44
	Pat             rules 45, 46
	APatsWithLiteral rules 47, 48
	APatWithLiteral rules 49, 50

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'{'            shift, and enter state 2

	Body           goto state 3

State 1


	'{'            shift, and enter state 2


State 2

	Body -> '{' . TopDecls '}'                          (rule 1)

	data           shift, and enter state 12
	tycon          shift, and enter state 13
	tyvar          shift, and enter state 14
	lit            shift, and enter state 15

	TopDecls       goto state 4
	TopDecl        goto state 5
	Decl           goto state 6
	Gendecl        goto state 7
	Vars           goto state 8
	FunLHS         goto state 9
	Pat            goto state 10
	APatWithLiteralgoto state 11

State 3

	%start_jvhcParse -> Body .                          (rule 0)

	%eof           accept


State 4

	Body -> '{' TopDecls . '}'                          (rule 1)

	'}'            shift, and enter state 28


State 5

	TopDecls -> TopDecl . ';' TopDecls                  (rule 2)
	TopDecls -> TopDecl .                               (rule 3)

	'}'            reduce using rule 3
	';'            shift, and enter state 27


State 6

	TopDecl -> Decl .                                   (rule 5)

	'}'            reduce using rule 5
	';'            reduce using rule 5


State 7

	Decl -> Gendecl .                                   (rule 21)

	'}'            reduce using rule 21
	';'            reduce using rule 21


State 8

	Gendecl -> Vars . '::' Type                         (rule 23)

	'::'           shift, and enter state 26


State 9

	Decl -> FunLHS . RHS                                (rule 22)

	'='            shift, and enter state 25

	RHS            goto state 24

State 10

	FunLHS -> Pat .                                     (rule 27)

	'='            reduce using rule 27


State 11

	Pat -> APatWithLiteral .                            (rule 46)

	'='            reduce using rule 46
	'->'           reduce using rule 46


State 12

	TopDecl -> data . SimpleType '=' Constrs            (rule 4)

	tycon          shift, and enter state 23

	SimpleType     goto state 22

State 13

	Pat -> tycon . APatsWithLiteral                     (rule 45)

	'='            reduce using rule 48
	'->'           reduce using rule 48
	tyvar          shift, and enter state 21
	lit            shift, and enter state 15

	APatsWithLiteralgoto state 19
	APatWithLiteralgoto state 20

State 14

	Vars -> tyvar . ',' Vars                            (rule 24)
	Vars -> tyvar .                                     (rule 25)
	FunLHS -> tyvar . APats                             (rule 26)
	APatWithLiteral -> tyvar .                          (rule 49)

	'='            reduce using rule 49
	','            shift, and enter state 17
	'::'           reduce using rule 25
	tyvar          shift, and enter state 18

	APats          goto state 16

State 15

	APatWithLiteral -> lit .                            (rule 50)

	'='            reduce using rule 50
	'->'           reduce using rule 50
	tyvar          reduce using rule 50
	lit            reduce using rule 50


State 16

	FunLHS -> tyvar APats .                             (rule 26)

	'='            reduce using rule 26


State 17

	Vars -> tyvar ',' . Vars                            (rule 24)

	tyvar          shift, and enter state 52

	Vars           goto state 51

State 18

	APats -> tyvar .                                    (rule 28)
	APats -> tyvar . APats                              (rule 29)

	'='            reduce using rule 28
	tyvar          shift, and enter state 18

	APats          goto state 50

State 19

	Pat -> tycon APatsWithLiteral .                     (rule 45)

	'='            reduce using rule 45
	'->'           reduce using rule 45


State 20

	APatsWithLiteral -> APatWithLiteral . APatsWithLiteral    (rule 47)

	'='            reduce using rule 48
	'->'           reduce using rule 48
	tyvar          shift, and enter state 21
	lit            shift, and enter state 15

	APatsWithLiteralgoto state 49
	APatWithLiteralgoto state 20

State 21

	APatWithLiteral -> tyvar .                          (rule 49)

	'='            reduce using rule 49
	'->'           reduce using rule 49
	tyvar          reduce using rule 49
	lit            reduce using rule 49


State 22

	TopDecl -> data SimpleType . '=' Constrs            (rule 4)

	'='            shift, and enter state 48


State 23

	SimpleType -> tycon . TyVars                        (rule 6)

	'='            reduce using rule 8
	tyvar          reduce using rule 8

	TyVars         goto state 47

State 24

	Decl -> FunLHS RHS .                                (rule 22)

	'}'            reduce using rule 22
	';'            reduce using rule 22


State 25

	RHS -> '=' . Exp                                    (rule 30)

	'('            shift, and enter state 40
	'\\'           shift, and enter state 41
	tycon          shift, and enter state 42
	tyvar          shift, and enter state 43
	let            shift, and enter state 44
	case           shift, and enter state 45
	lit            shift, and enter state 46

	Exp            goto state 36
	ExpC           goto state 37
	FExp           goto state 38
	AExp           goto state 39

State 26

	Gendecl -> Vars '::' . Type                         (rule 23)

	'('            shift, and enter state 33
	tycon          shift, and enter state 34
	tyvar          shift, and enter state 35

	AType          goto state 30
	BType          goto state 31
	Type           goto state 32

State 27

	TopDecls -> TopDecl ';' . TopDecls                  (rule 2)

	data           shift, and enter state 12
	tycon          shift, and enter state 13
	tyvar          shift, and enter state 14
	lit            shift, and enter state 15

	TopDecls       goto state 29
	TopDecl        goto state 5
	Decl           goto state 6
	Gendecl        goto state 7
	Vars           goto state 8
	FunLHS         goto state 9
	Pat            goto state 10
	APatWithLiteralgoto state 11

State 28

	Body -> '{' TopDecls '}' .                          (rule 1)

	%eof           reduce using rule 1


State 29

	TopDecls -> TopDecl ';' TopDecls .                  (rule 2)

	'}'            reduce using rule 2


State 30

	BType -> AType .                                    (rule 18)

	'}'            reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'->'           reduce using rule 18
	';'            reduce using rule 18
	tycon          reduce using rule 18
	tyvar          reduce using rule 18


State 31

	BType -> BType . AType                              (rule 17)
	Type -> BType .                                     (rule 19)
	Type -> BType . '->' Type                           (rule 20)

	'}'            reduce using rule 19
	'('            shift, and enter state 33
	')'            reduce using rule 19
	'->'           shift, and enter state 64
	';'            reduce using rule 19
	tycon          shift, and enter state 34
	tyvar          shift, and enter state 35

	AType          goto state 63

State 32

	Gendecl -> Vars '::' Type .                         (rule 23)

	'}'            reduce using rule 23
	';'            reduce using rule 23


State 33

	AType -> '(' . Type ')'                             (rule 16)

	'('            shift, and enter state 33
	tycon          shift, and enter state 34
	tyvar          shift, and enter state 35

	AType          goto state 30
	BType          goto state 31
	Type           goto state 62

State 34

	AType -> tycon .                                    (rule 15)

	'}'            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'|'            reduce using rule 15
	'->'           reduce using rule 15
	';'            reduce using rule 15
	tycon          reduce using rule 15
	tyvar          reduce using rule 15


State 35

	AType -> tyvar .                                    (rule 14)

	'}'            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'|'            reduce using rule 14
	'->'           reduce using rule 14
	';'            reduce using rule 14
	tycon          reduce using rule 14
	tyvar          reduce using rule 14


State 36

	RHS -> '=' Exp .                                    (rule 30)

	'}'            reduce using rule 30
	';'            reduce using rule 30


State 37

	Exp -> ExpC .                                       (rule 31)

	'}'            reduce using rule 31
	')'            reduce using rule 31
	';'            reduce using rule 31
	of             reduce using rule 31


State 38

	ExpC -> FExp .                                      (rule 35)

	'}'            reduce using rule 35
	')'            reduce using rule 35
	';'            reduce using rule 35
	of             reduce using rule 35


State 39

	FExp -> AExp .                                      (rule 36)
	FExp -> AExp . FExp                                 (rule 37)

	'}'            reduce using rule 36
	'('            shift, and enter state 40
	')'            reduce using rule 36
	';'            reduce using rule 36
	tycon          shift, and enter state 42
	tyvar          shift, and enter state 43
	of             reduce using rule 36
	lit            shift, and enter state 46

	FExp           goto state 61
	AExp           goto state 39

State 40

	AExp -> '(' . Exp ')'                               (rule 41)

	'('            shift, and enter state 40
	'\\'           shift, and enter state 41
	tycon          shift, and enter state 42
	tyvar          shift, and enter state 43
	let            shift, and enter state 44
	case           shift, and enter state 45
	lit            shift, and enter state 46

	Exp            goto state 60
	ExpC           goto state 37
	FExp           goto state 38
	AExp           goto state 39

State 41

	ExpC -> '\\' . tyvar '->' Exp                       (rule 32)

	tyvar          shift, and enter state 59


State 42

	AExp -> tycon .                                     (rule 39)

	'}'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	';'            reduce using rule 39
	tycon          reduce using rule 39
	tyvar          reduce using rule 39
	of             reduce using rule 39
	lit            reduce using rule 39


State 43

	AExp -> tyvar .                                     (rule 38)

	'}'            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	';'            reduce using rule 38
	tycon          reduce using rule 38
	tyvar          reduce using rule 38
	of             reduce using rule 38
	lit            reduce using rule 38


State 44

	ExpC -> let . '{' Decl '}' in Exp                   (rule 33)

	'{'            shift, and enter state 58


State 45

	ExpC -> case . Exp of '{' Alts '}'                  (rule 34)

	'('            shift, and enter state 40
	'\\'           shift, and enter state 41
	tycon          shift, and enter state 42
	tyvar          shift, and enter state 43
	let            shift, and enter state 44
	case           shift, and enter state 45
	lit            shift, and enter state 46

	Exp            goto state 57
	ExpC           goto state 37
	FExp           goto state 38
	AExp           goto state 39

State 46

	AExp -> lit .                                       (rule 40)

	'}'            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	';'            reduce using rule 40
	tycon          reduce using rule 40
	tyvar          reduce using rule 40
	of             reduce using rule 40
	lit            reduce using rule 40


State 47

	SimpleType -> tycon TyVars .                        (rule 6)
	TyVars -> TyVars . tyvar                            (rule 7)

	'='            reduce using rule 6
	tyvar          shift, and enter state 56


State 48

	TopDecl -> data SimpleType '=' . Constrs            (rule 4)

	tycon          shift, and enter state 55

	Constrs        goto state 53
	Constr         goto state 54

State 49

	APatsWithLiteral -> APatWithLiteral APatsWithLiteral .    (rule 47)

	'='            reduce using rule 47
	'->'           reduce using rule 47


State 50

	APats -> tyvar APats .                              (rule 29)

	'='            reduce using rule 29


State 51

	Vars -> tyvar ',' Vars .                            (rule 24)

	'::'           reduce using rule 24


State 52

	Vars -> tyvar . ',' Vars                            (rule 24)
	Vars -> tyvar .                                     (rule 25)

	','            shift, and enter state 17
	'::'           reduce using rule 25


State 53

	TopDecl -> data SimpleType '=' Constrs .            (rule 4)

	'}'            reduce using rule 4
	';'            reduce using rule 4


State 54

	Constrs -> Constr . '|' Constrs                     (rule 9)
	Constrs -> Constr .                                 (rule 10)

	'}'            reduce using rule 10
	'|'            shift, and enter state 73
	';'            reduce using rule 10


State 55

	Constr -> tycon . ATypes                            (rule 11)

	'}'            reduce using rule 13
	'('            shift, and enter state 33
	'|'            reduce using rule 13
	';'            reduce using rule 13
	tycon          shift, and enter state 34
	tyvar          shift, and enter state 35

	ATypes         goto state 71
	AType          goto state 72

State 56

	TyVars -> TyVars tyvar .                            (rule 7)

	'='            reduce using rule 7
	tyvar          reduce using rule 7


State 57

	ExpC -> case Exp . of '{' Alts '}'                  (rule 34)

	of             shift, and enter state 70


State 58

	ExpC -> let '{' . Decl '}' in Exp                   (rule 33)

	tycon          shift, and enter state 13
	tyvar          shift, and enter state 14
	lit            shift, and enter state 15

	Decl           goto state 69
	Gendecl        goto state 7
	Vars           goto state 8
	FunLHS         goto state 9
	Pat            goto state 10
	APatWithLiteralgoto state 11

State 59

	ExpC -> '\\' tyvar . '->' Exp                       (rule 32)

	'->'           shift, and enter state 68


State 60

	AExp -> '(' Exp . ')'                               (rule 41)

	')'            shift, and enter state 67


State 61

	FExp -> AExp FExp .                                 (rule 37)

	'}'            reduce using rule 37
	')'            reduce using rule 37
	';'            reduce using rule 37
	of             reduce using rule 37


State 62

	AType -> '(' Type . ')'                             (rule 16)

	')'            shift, and enter state 66


State 63

	BType -> BType AType .                              (rule 17)

	'}'            reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'->'           reduce using rule 17
	';'            reduce using rule 17
	tycon          reduce using rule 17
	tyvar          reduce using rule 17


State 64

	Type -> BType '->' . Type                           (rule 20)

	'('            shift, and enter state 33
	tycon          shift, and enter state 34
	tyvar          shift, and enter state 35

	AType          goto state 30
	BType          goto state 31
	Type           goto state 65

State 65

	Type -> BType '->' Type .                           (rule 20)

	'}'            reduce using rule 20
	')'            reduce using rule 20
	';'            reduce using rule 20


State 66

	AType -> '(' Type ')' .                             (rule 16)

	'}'            reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'|'            reduce using rule 16
	'->'           reduce using rule 16
	';'            reduce using rule 16
	tycon          reduce using rule 16
	tyvar          reduce using rule 16


State 67

	AExp -> '(' Exp ')' .                               (rule 41)

	'}'            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	';'            reduce using rule 41
	tycon          reduce using rule 41
	tyvar          reduce using rule 41
	of             reduce using rule 41
	lit            reduce using rule 41


State 68

	ExpC -> '\\' tyvar '->' . Exp                       (rule 32)

	'('            shift, and enter state 40
	'\\'           shift, and enter state 41
	tycon          shift, and enter state 42
	tyvar          shift, and enter state 43
	let            shift, and enter state 44
	case           shift, and enter state 45
	lit            shift, and enter state 46

	Exp            goto state 78
	ExpC           goto state 37
	FExp           goto state 38
	AExp           goto state 39

State 69

	ExpC -> let '{' Decl . '}' in Exp                   (rule 33)

	'}'            shift, and enter state 77


State 70

	ExpC -> case Exp of . '{' Alts '}'                  (rule 34)

	'{'            shift, and enter state 76


State 71

	Constr -> tycon ATypes .                            (rule 11)

	'}'            reduce using rule 11
	'|'            reduce using rule 11
	';'            reduce using rule 11


State 72

	ATypes -> AType . ATypes                            (rule 12)

	'}'            reduce using rule 13
	'('            shift, and enter state 33
	'|'            reduce using rule 13
	';'            reduce using rule 13
	tycon          shift, and enter state 34
	tyvar          shift, and enter state 35

	ATypes         goto state 75
	AType          goto state 72

State 73

	Constrs -> Constr '|' . Constrs                     (rule 9)

	tycon          shift, and enter state 55

	Constrs        goto state 74
	Constr         goto state 54

State 74

	Constrs -> Constr '|' Constrs .                     (rule 9)

	'}'            reduce using rule 9
	';'            reduce using rule 9


State 75

	ATypes -> AType ATypes .                            (rule 12)

	'}'            reduce using rule 12
	'|'            reduce using rule 12
	';'            reduce using rule 12


State 76

	ExpC -> case Exp of '{' . Alts '}'                  (rule 34)

	tycon          shift, and enter state 13
	tyvar          shift, and enter state 21
	lit            shift, and enter state 15

	Alts           goto state 80
	Alt            goto state 81
	Pat            goto state 82
	APatWithLiteralgoto state 11

State 77

	ExpC -> let '{' Decl '}' . in Exp                   (rule 33)

	in             shift, and enter state 79


State 78

	ExpC -> '\\' tyvar '->' Exp .                       (rule 32)

	'}'            reduce using rule 32
	')'            reduce using rule 32
	';'            reduce using rule 32
	of             reduce using rule 32


State 79

	ExpC -> let '{' Decl '}' in . Exp                   (rule 33)

	'('            shift, and enter state 40
	'\\'           shift, and enter state 41
	tycon          shift, and enter state 42
	tyvar          shift, and enter state 43
	let            shift, and enter state 44
	case           shift, and enter state 45
	lit            shift, and enter state 46

	Exp            goto state 86
	ExpC           goto state 37
	FExp           goto state 38
	AExp           goto state 39

State 80

	ExpC -> case Exp of '{' Alts . '}'                  (rule 34)

	'}'            shift, and enter state 85


State 81

	Alts -> Alt . ';' Alts                              (rule 42)
	Alts -> Alt .                                       (rule 43)

	'}'            reduce using rule 43
	';'            shift, and enter state 84


State 82

	Alt -> Pat . '->' Exp                               (rule 44)

	'->'           shift, and enter state 83


State 83

	Alt -> Pat '->' . Exp                               (rule 44)

	'('            shift, and enter state 40
	'\\'           shift, and enter state 41
	tycon          shift, and enter state 42
	tyvar          shift, and enter state 43
	let            shift, and enter state 44
	case           shift, and enter state 45
	lit            shift, and enter state 46

	Exp            goto state 88
	ExpC           goto state 37
	FExp           goto state 38
	AExp           goto state 39

State 84

	Alts -> Alt ';' . Alts                              (rule 42)

	tycon          shift, and enter state 13
	tyvar          shift, and enter state 21
	lit            shift, and enter state 15

	Alts           goto state 87
	Alt            goto state 81
	Pat            goto state 82
	APatWithLiteralgoto state 11

State 85

	ExpC -> case Exp of '{' Alts '}' .                  (rule 34)

	'}'            reduce using rule 34
	')'            reduce using rule 34
	';'            reduce using rule 34
	of             reduce using rule 34


State 86

	ExpC -> let '{' Decl '}' in Exp .                   (rule 33)

	'}'            reduce using rule 33
	')'            reduce using rule 33
	';'            reduce using rule 33
	of             reduce using rule 33


State 87

	Alts -> Alt ';' Alts .                              (rule 42)

	'}'            reduce using rule 42


State 88

	Alt -> Pat '->' Exp .                               (rule 44)

	'}'            reduce using rule 44
	';'            reduce using rule 44


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 51
Number of terminals: 20
Number of non-terminals: 27
Number of states: 89
